// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2906.SpanawayLakeSentinels;



import org.usfirst.frc2906.SpanawayLakeSentinels.commands.*;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.JoystickButton;


public class OI {
 
    public Joystick joystick1;
    public Joystick joystick2;
    public JoystickButton j1b1;
    public JoystickButton j1b2;
    public JoystickButton j1b3;
    public JoystickButton j1b4;
    public JoystickButton j1b5;
    public JoystickButton j1b6;
    public JoystickButton j1b7;
    public JoystickButton j1b8;
    public JoystickButton j1b9;
    public JoystickButton j1b10;
    public JoystickButton j2b1;
    public JoystickButton j2b2;
    public JoystickButton j2b3;
    public JoystickButton j2b4;
    public JoystickButton j2b5;
    public JoystickButton j2b6;
    public JoystickButton j2b7;
    public JoystickButton j2b8;
    public JoystickButton j2b9;
    public JoystickButton j2b10;
    public JoystickButton j2b11;
    public JoystickButton j2b12;

    public OI() {
    	joystick1 = new Joystick(0);
    	joystick2 = new Joystick(1);
    	
       
        
        j2b1 = new JoystickButton (joystick2, 1);
        j2b1.whileHeld(new Reload());
        j2b1.whenReleased(new Fire());
        
        j2b2 = new JoystickButton (joystick2, 2);
        j2b2.whenPressed(new runEncs());

        
        j2b3 = new JoystickButton (joystick2, 3);
        j2b3.whileHeld(new ballIn());
        j2b3.whenReleased(new ballStop());
        
        j2b4 = new JoystickButton (joystick2, 4);
        j2b4.whileHeld(new ballOut());
        j2b4.whenReleased(new ballStop());
        
        j1b5 = new JoystickButton (joystick1, 5);
        j1b5.whileHeld(new ballIn());
        j1b5.whenReleased(new ballStop());
        
        j1b6 = new JoystickButton (joystick1, 6);
        j1b6.whileHeld(new ballOut());
        j1b6.whenReleased(new ballStop());
        
        j1b3 = new JoystickButton (joystick1, 3);
        j1b3.whenPressed(new armStop());
        
        j1b4 = new JoystickButton (joystick1, 4);
        j1b4.whenPressed(new armIdle());
        

        
       /* j1b5 = new JoystickButton (joystick1, 5);
        j1b5.whileHeld(new armUp());
        j1b5.whenReleased(new armIdle());
        
        j1b6 = new JoystickButton (joystick1, 6);
        j1b6.whenReleased(new armIdle());
        j1b6.whileHeld(new armDown());*/
        

        
        
        j2b12 = new JoystickButton (joystick2, 12);
        j2b12.whileHeld(new DriveArm());
        j2b12.whenReleased(new armStop());
        
        j2b11 = new JoystickButton (joystick2, 11);
        j2b11.whileHeld(new DriveArm());
        j2b11.whenReleased(new armStop());
        
      /*  j1b1.whenPressed(new RaiseArm());
        j1b1.whenReleased(new LowerArm());*/

    
    }

    
    public Joystick getJoystick1() {
        return joystick1;
    }
   
    public double getJoystick1X(){
    	if(Math.abs(joystick1.getX())>RobotMap.sensitivity){
    		return -1*joystick1.getX();
    	} 
    	else {
    		return 0.0;
    	}
    }
    
    public double getJoystick1Y(){
    	if(Math.abs(joystick1.getY())>RobotMap.sensitivity){
    		return -1*joystick1.getY();
    	} 
    	else {
    		return 0.0;
    	}
    }
    
    public Joystick getJoystick2(){
    	return joystick2;
    }
    public double getJoystick2Y(){
    	if(Math.abs(joystick2.getY())>RobotMap.sensitivity){
    		return .4*joystick2.getY();
    	} 
    	else {
    		return 0.0;
    	}
    }
    public double raise(){
    	if(Math.abs(joystick2.getY())>RobotMap.sensitivity){
    		return -1*joystick2.getY();
    	}
    	else{
    		return (0.0);
    	}
    }
}

